{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/Escritorio/recipes-client/src/components/session/Session.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect\n} = React;\n\nconst Session = () => {\n  _s();\n\n  let [info, setInfo] = useState({\n    user: \"\",\n    recipes: []\n  });\n\n  const getUser = async () => {\n    let responseFromGet = await fetch(\"http://localhost:3001/user\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        token: window.localStorage.token\n      }\n    }).then(response => response.json()).then(result => {\n      return result;\n    });\n    let username = responseFromGet.user.username;\n    let recipes = [];\n    let userRecipes = responseFromGet.user.recipes;\n    recipes = userRecipes.map(recipe => {\n      let recipeObject = {\n        id: recipe._id,\n        name: recipe.name,\n        country: recipe.country,\n        ingredients: recipe.ingredients\n      };\n      return recipeObject;\n    });\n    let userInfo = {\n      username: username,\n      recipes: recipes\n    };\n    setInformation(userInfo);\n  };\n\n  const setInformation = information => {\n    setInfo({\n      user: information.username,\n      recipes: information.recipes\n    });\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  if (info.user === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome \", info.user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n          children: \"Your recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: info.recipes.map(recipe => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: recipe.name\n              }, `recipe-name-${recipe.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: recipe.country\n              }, `recipe-country-${recipe.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, `recipe-container-${recipe.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Session, \"U22RYCoOzFqxvWw3GwAXZOCVGBs=\");\n\n_c = Session;\nexport default Session;\n\nvar _c;\n\n$RefreshReg$(_c, \"Session\");","map":{"version":3,"sources":["/home/eduardo/Escritorio/recipes-client/src/components/session/Session.js"],"names":["React","useState","useEffect","Session","info","setInfo","user","recipes","getUser","responseFromGet","fetch","method","headers","Accept","token","window","localStorage","then","response","json","result","username","userRecipes","map","recipe","recipeObject","id","_id","name","country","ingredients","userInfo","setInformation","information"],"mappings":"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","sourcesContent":["import React from \"react\";\nconst { useState, useEffect } = React;\n\nconst Session = () => {\n  let [info, setInfo] = useState({\n    user: \"\",\n    recipes: [],\n  });\n\n  const getUser = async () => {\n    let responseFromGet = await fetch(\"http://localhost:3001/user\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        token: window.localStorage.token,\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        return result;\n      });\n    let username = responseFromGet.user.username;\n    let recipes = [];\n    let userRecipes = responseFromGet.user.recipes;\n    recipes = userRecipes.map((recipe) => {\n      let recipeObject = {\n        id: recipe._id,\n        name: recipe.name,\n        country: recipe.country,\n        ingredients: recipe.ingredients,\n      };\n      return recipeObject;\n    });\n    let userInfo = {\n      username: username,\n      recipes: recipes,\n    };\n    setInformation(userInfo);\n  };\n\n  const setInformation = (information) => {\n    setInfo({\n      user: information.username,\n      recipes: information.recipes,\n    });\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  if (info.user === \"\") {\n    return <div>Cargando...</div>;\n  } else {\n    return (\n      <div>\n        <p>Welcome {info.user}</p>\n        <table>\n          <caption>Your recipes</caption>\n          <tbody>\n            {info.recipes.map((recipe) => {\n              return (\n                <tr key={`recipe-container-${recipe.id}`}>\n                  <td key={`recipe-name-${recipe.id}`}>{recipe.name}</td>\n                  <td key={`recipe-country-${recipe.id}`}>{recipe.country}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n};\n\nexport default Session;\n"]},"metadata":{},"sourceType":"module"}